% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/do_mc.R
\name{do_mc}
\alias{do_mc}
\title{Monte Carlo Estimates for
'indirect_effects' and
'cond_indirect_effects'}
\usage{
do_mc(
  fit,
  R = 100,
  seed = NULL,
  parallel = TRUE,
  ncores = max(parallel::detectCores(logical = FALSE) - 1, 1),
  make_cluster_args = list(),
  progress = TRUE
)
}
\arguments{
\item{fit}{The output of
\code{\link[lavaan:sem]{lavaan::sem()}}. The output of
\code{\link[stats:lm]{stats::lm()}} is not supported.}

\item{R}{The number of replications.
Default is 100.}

\item{seed}{The seed for the
generating Monte Carlo estimates.
Default is \code{NULL} and seed is not set.}

\item{parallel}{Not used. Kept
for compatibility with \code{\link[=do_boot]{do_boot()}}.}

\item{ncores}{Not used. Kept
for compatibility with \code{\link[=do_boot]{do_boot()}}.}

\item{make_cluster_args}{Not used. Kept
for compatibility with \code{\link[=do_boot]{do_boot()}}.}

\item{progress}{Not used. Kept
for compatibility with \code{\link[=do_boot]{do_boot()}}.}
}
\value{
A \code{mc_out}-class object
that can be used for the \code{mc_out}
argument of
\code{\link[=cond_indirect_effects]{cond_indirect_effects()}},
\code{\link[=indirect_effect]{indirect_effect()}}, and
\code{\link[=cond_indirect]{cond_indirect()}} for forming
Monte Carlo confidence intervals. The
object is a list with the number of
elements equal to the number of
Monte Carlo replications. Each element
is a
list of the parameter estimates and
sample variances and covariances of
the variables in each Monte Carlo
replication.
}
\description{
Generate Monte Carlo
estimates to be used by
\code{\link[=cond_indirect_effects]{cond_indirect_effects()}},
\code{\link[=indirect_effect]{indirect_effect()}}, and
\code{\link[=cond_indirect]{cond_indirect()}},
}
\details{
It uses the parameter
estimates and their variance-covariance
matrix to generate Monte Carlo
estimates of the parameter estimates
in a model fitted by
\code{\link[lavaan:sem]{lavaan::sem()}}. The stored estimates
can then be used by
\code{\link[=cond_indirect_effects]{cond_indirect_effects()}},
\code{\link[=indirect_effect]{indirect_effect()}}, and
\code{\link[=cond_indirect]{cond_indirect()}} to form
Monte Carlo confidence intervals.

This approach removes the need to
repeat Monte Carlo simulation in
each call to
\code{\link[=cond_indirect_effects]{cond_indirect_effects()}},
\code{\link[=indirect_effect]{indirect_effect()}}, and
\code{\link[=cond_indirect]{cond_indirect()}}. It also ensures
that the same set of Monte Carlo
estimates is used in all subsequent
analysis.
}
\examples{

# TO PROCESS

data(data_med_mod_ab1)
dat <- data_med_mod_ab1
lm_m <- lm(m ~ x*w + c1 + c2, dat)
lm_y <- lm(y ~ m*w + x + c1 + c2, dat)
lm_out <- lm2list(lm_m, lm_y)
# In real research, R should be 2000 or even 5000
# In real research, no need to set parallel and progress to FALSE
# Parallel processing is enabled by default and
# progress is displayed by default.
lm_boot_out <- do_boot(lm_out, R = 50, seed = 1234,
                       parallel = FALSE,
                       progress = FALSE)
wlevels <- mod_levels(w = "w", fit = lm_out)
wlevels
out <- cond_indirect_effects(wlevels = wlevels,
                             x = "x",
                             y = "y",
                             m = "m",
                             fit = lm_out,
                             boot_ci = TRUE,
                             boot_out = lm_boot_out)
out

}
\seealso{
\code{\link[=fit2mc_out]{fit2mc_out()}}, which
implements the Monte Carlo simulation.
}
